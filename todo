 KROK 1: Podstawy projektu
 Utwórz strukturę projektu Flask (app.py, templates/, static/, models.py, forms.py, data/ itd.)

 Skonfiguruj środowisko: Flask, Flask-Login, Flask-WTF, Flask-SQLAlchemy, Flask-Migrate

 Ustaw bazę danych (SQLite lub PostgreSQL)

👤 KROK 2: System użytkowników
 Rejestracja i logowanie (Flask-Login)

 Rola użytkownika: twórca / subskrybent

 Profile publiczne/prywatne

 Edycja profilu (bio, avatar, baner, dane kontaktowe itp.)

📸 KROK 3: Tworzenie treści
 System postów (tekst + opcjonalny obrazek/wideo)

 Widok feedu (globalny, użytkownika, subskrybowanych)

 Hashtagi i oznaczanie innych użytkowników (opcjonalnie)

 Dodawanie komentarzy i lajków

💳 KROK 4: System subskrypcji/płatności
 Użytkownik może ustawić płatną subskrypcję (np. miesięczną)

 Możliwość płatności Stripe lub PayPal

 Subskrybenci mają dostęp do prywatnych postów twórcy

📁 KROK 5: Media i pliki
 Przesyłanie plików (obrazki, filmy)

 Ograniczenie rozmiaru, formaty plików

 Podgląd multimediów

 (Opcjonalnie) Watermark lub zabezpieczenia przed pobraniem

🔍 KROK 6: Wyszukiwanie i eksploracja
 Wyszukiwanie użytkowników, tagów, postów

 Strona “odkrywaj” z polecanymi twórcami

 Popularne hashtagi i posty

🛡️ KROK 7: Bezpieczeństwo i moderacja
 Autoryzacja widoków

 Zgłaszanie treści

 Blokowanie użytkowników

 Ograniczenia wiekowe (18+)

🧠 KROK 8: Ulepszenia i AI
 Propozycje treści (na bazie zainteresowań)

 Auto-generowanie tagów z obrazów

 Moderacja treści AI (np. wykrywanie nagości)

🧪 KROK 9: Testowanie i wdrożenie
 Testy jednostkowe

 Debugowanie

 Wdrożenie (np. na Render, Railway, Heroku lub VPS)




///-----------------------
stałej szerkosci menu-
try catch przy register jakby zagrazalo unique(za pomoca zwyklego if)+
zrob po angielsku apkez+
zrob formularz update - jeden endpoint patch ktory tobi jak w webhookregistrator czyli nie moze byc nic nullem, wczesniej do tych pol poza password wrzuca, okno bedzie w formie dialogu+
zrob cos z tym falsh poniewaz nie dziala+
wyswietl kto kim jestes+
formularz o zostaniu creatorem"reczenie nadanie" - bedzie jeden+
/id usera - @login_required i jesli currentuser == id to user_edit.html a jesli nie to user+
zrob tabelke relayjnie gdzie bedzie id tworcy(musi byc tworca) i bedzie dodawac posty, nastepnie(kazdy musi miec id unikalne ktore bedzie potrzebne do edycji i bedzie trzeba sprawdzac czy admin czy currentUserId = user.id)+
zdjecie profilowe+




edycja+
https://chatgpt.com/c/683c538a-5974-8010-b263-32af2a9ac2c3 - rozwiaznie z followami, jak bedzie endpoint kazdego uzytkownika {{}} oraz przycisk nalezy odpowiednio zrobic
//notyfication like when admin deleted post or creator created a post
zrob inclueds user-template cos w ten desen
logo utwórz
walidacja ze min 3 znaki itd
na koncu zrob jakies 500 403 404 itd
zrob zeby byl min 1 admin
zmiana hasla
usuwanie+
 CSRFProtect zrob
profil creator - mozliowsc kupienia subsrykcji, zrob tablice z subskrypcjam
add